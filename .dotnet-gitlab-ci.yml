stages:
  - "test"
  - "build"

unit_tests:
  stage: "test"
  image: "mcr.microsoft.com/dotnet/sdk:6.0"
  tags:
    - "docker"
  script:
    - dotnet test ./dotnet/wa-app.Tests/ --logger:"junit;LogFilePath=../artifacts/{assembly}-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"
  artifacts:
    when: always 
    paths:
      - "./**/*test-result.xml"
    reports:
      junit:
        - "./**/*test-result.xml"
  only:
    - merge_request

linter_test:
  stage: test
  needs:
    - unit_tests
  image: "mcr.microsoft.com/dotnet/sdk:6.0"
  tags:
    - "docker"
  script:
    - mkdir format-report
    - dotnet tool update --global dotnet-format
    - dotnet format style ./dotnet/wa-app/ --verify-no-changes --report ./format-report
  artifacts:
    when: always 
    paths:
      - "format-report/**"
  only:
    - merge_request

sonarqube-check:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  tags:
    - "docker"
  stage: test
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/dotnet/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true
  allow_failure: true
  only:
    - merge_request
    
sulution_build:
  stage: "build"
  needs:
    - unit_tests
    - linter_test
  image: "mcr.microsoft.com/dotnet/sdk:6.0"
  tags:
    - "docker"
  script:
    - dotnet publish ./dotnet/wa-app $DOTNET_BUILD_ARGS
  variables: 
    DOTNET_BUILD_ARGS: "-c ${BUILD_TYPE}"
  artifacts:
    expire_in: 30 days
    paths:
      - "./dotnet/wa-app/bin/${BUILD_TYPE}/net6.0/publish/*"
  only:
    - merge_request
